// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText conPasswordEt;

  @NonNull
  public final TextInputEditText displayNameEt;

  @NonNull
  public final TextInputEditText emailEt;

  @NonNull
  public final TextView loginTxt;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextInputEditText passwordEt;

  @NonNull
  public final Button registerBtn;

  @NonNull
  public final TextInputLayout textInputLayout;

  @NonNull
  public final TextInputLayout textInputLayout0;

  @NonNull
  public final TextInputLayout textInputLayout1;

  @NonNull
  public final TextInputLayout textInputLayout2;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText conPasswordEt, @NonNull TextInputEditText displayNameEt,
      @NonNull TextInputEditText emailEt, @NonNull TextView loginTxt,
      @NonNull ConstraintLayout main, @NonNull TextInputEditText passwordEt,
      @NonNull Button registerBtn, @NonNull TextInputLayout textInputLayout,
      @NonNull TextInputLayout textInputLayout0, @NonNull TextInputLayout textInputLayout1,
      @NonNull TextInputLayout textInputLayout2) {
    this.rootView = rootView;
    this.conPasswordEt = conPasswordEt;
    this.displayNameEt = displayNameEt;
    this.emailEt = emailEt;
    this.loginTxt = loginTxt;
    this.main = main;
    this.passwordEt = passwordEt;
    this.registerBtn = registerBtn;
    this.textInputLayout = textInputLayout;
    this.textInputLayout0 = textInputLayout0;
    this.textInputLayout1 = textInputLayout1;
    this.textInputLayout2 = textInputLayout2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.conPasswordEt;
      TextInputEditText conPasswordEt = ViewBindings.findChildViewById(rootView, id);
      if (conPasswordEt == null) {
        break missingId;
      }

      id = R.id.displayNameEt;
      TextInputEditText displayNameEt = ViewBindings.findChildViewById(rootView, id);
      if (displayNameEt == null) {
        break missingId;
      }

      id = R.id.emailEt;
      TextInputEditText emailEt = ViewBindings.findChildViewById(rootView, id);
      if (emailEt == null) {
        break missingId;
      }

      id = R.id.loginTxt;
      TextView loginTxt = ViewBindings.findChildViewById(rootView, id);
      if (loginTxt == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.passwordEt;
      TextInputEditText passwordEt = ViewBindings.findChildViewById(rootView, id);
      if (passwordEt == null) {
        break missingId;
      }

      id = R.id.registerBtn;
      Button registerBtn = ViewBindings.findChildViewById(rootView, id);
      if (registerBtn == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      id = R.id.textInputLayout0;
      TextInputLayout textInputLayout0 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout0 == null) {
        break missingId;
      }

      id = R.id.textInputLayout1;
      TextInputLayout textInputLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout1 == null) {
        break missingId;
      }

      id = R.id.textInputLayout2;
      TextInputLayout textInputLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout2 == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, conPasswordEt, displayNameEt,
          emailEt, loginTxt, main, passwordEt, registerBtn, textInputLayout, textInputLayout0,
          textInputLayout1, textInputLayout2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
